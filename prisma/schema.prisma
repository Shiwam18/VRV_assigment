// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model user {
  id            Int @id @default(autoincrement())
  name          String? @db.VarChar(255)
  email         String? @db.VarChar(500) @unique
  password      String @db.VarChar(255)
  Status        userStatus 
  phone         String?   @db.VarChar(10)
  image         String? @db.VarChar(500)
}



enum userStatus {
  ACTIVE
  INACTIVE
}



enum Role {
  Admin
  SuperAdmin
}




enum Permission {
  CREATE
  READ
  UPDATE
  DELETE
}



model admin_users {
  id            Int               @id @default(autoincrement())
  username      String            @db.VarChar(255) @unique
  password      String            @db.VarChar(255)   
  role          Role              @default(Admin)
  image         String?           @db.VarChar(255) 
  status        userStatus        @default(ACTIVE)
}



  
model admin_user {
  id            Int           @id @default(autoincrement())
  username      String        @db.VarChar(255) @unique
  password      String        @db.VarChar(255)    
  image         String?       @db.VarChar(255)  
}




model coin_table {
  id                      Int         @id @default(autoincrement())
  coin_name               String?     @db.VarChar(255)
  coin_abbreviation       String?     @db.VarChar(255)
  coin_initial_price_usd  Float?      @db.Float
  coin_current_price      Float?      @db.Float
  coin_precision          Int?        @db.Int
  coin_status             Status      @default(PENDING)
  coin_API                String?     @db.VarChar(255)
  created_at              DateTime?   @db.DateTime
  updated_at              DateTime?   @default(now()) @db.DateTime
  remarks                 String?     @db.VarChar(255)
}

enum Status {
  PENDING
  ACTIVE
  SUSPENDED
}

model market_table {
  id          Int       @id @default(autoincrement())
  coin_id     Int?       
  market_name String?   @db.VarChar(255)
  market_API  String?   @db.VarChar(255)
  status      Status    @default(PENDING)
  created_at  DateTime? @db.DateTime
  updated_at  DateTime? @default(now()) @db.DateTime
}

model pair_table {
  id           Int       @id @default(autoincrement())
  market_id    Int?     // Nullable, can reference a Market model if needed
  coin_id      Int?     // Nullable, can reference a Coin model if needed
  pair_API   String?     @db.VarChar(255)
  initial_price Float?   @db.Float
  price_up     Int?      @db.Int
  price_down   Int?      @db.Int
  status       Status    @default(PENDING)
  created_at   DateTime? @db.DateTime
  updated_at   DateTime  @default(now()) @updatedAt 
}


